# .env.template

# --- Configuration Globale Flask ---
FLASK_APP=run.py
FLASK_DEBUG=1 # Mettre à 0 en production
SECRET_KEY=your_strong_random_secret_key_here

# --- Configuration Plex Web Editor ---
PLEX_URL=http://localhost:32400
PLEX_TOKEN=your_plex_token_here

# Configuration pour le nettoyage des dossiers (utilisé par Plex Web Editor)
PERFORM_ACTUAL_DELETION=True # True pour suppression réelle, False pour simulation
ORPHAN_EXTENSIONS=.nfo,.jpg,.jpeg,.png,.txt,.srt,.sub,.idx,.lnk,.exe,.vsmeta,.edl # Adaptez cette liste

# --- Configuration SeedboxWebUI --
STAGING_DIR=X:/seedbox_staging
SONARR_URL=http://localhost:8989
SONARR_API_KEY=your_sonarr_api_key_here
RADARR_URL=http://localhost:7878
RADARR_API_KEY=your_radarr_api_key_here
RADARR_TAG_ON_ARCHIVE=vu
# ---Configuration SFTP Seedbox ---
SEEDBOX_SFTP_HOST=your_sftp_host
SEEDBOX_SFTP_PORT=17714
SEEDBOX_SFTP_USER=your_sftp_user
SEEDBOX_SFTP_PASSWORD=your_sftp_password
SEEDBOX_SONARR_FINISHED_PATH="/downloads/Termines/sonarr_downloads"
SEEDBOX_RADARR_FINISHED_PATH="/downloads/Termines/radarr_downloads"
SEEDBOX_SONARR_WORKING_PATH="/downloads/sonarr_downloads"
SEEDBOX_RADARR_WORKING_PATH="/downloads/radarr_downloads"

# ---Configuration RTorrent-RuTorrent ---
# --- rTorrent/ruTorrent httprpc API Settings ---
RUTORRENT_API_URL="https://YOUR_SEEDBOX_IP_OR_HOSTNAME/rutorrent/plugins/httprpc/action.php"
RUTORRENT_USER="your_rutorrent_username"
RUTORRENT_PASSWORD="your_rutorrent_password"
SEEDBOX_SSL_VERIFY="False" # Set to "True" if you have a valid SSL cert and want to verify, "False" to disable verification

# Default labels to assign to torrents added for Sonarr/Radarr
RTORRENT_LABEL_SONARR="sonarr"
RTORRENT_LABEL_RADARR="radarr"

# Initial download directories on the seedbox for new torrents
# rTorrent will download items here. Ensure these paths exist on your seedbox and rTorrent can write to them.
# Your rTorrent setup might then use labels to move them to final "finished" locations.
RTORRENT_DOWNLOAD_DIR_SONARR="/sdi/0103/downloads/sonarr_downloads/"
RTORRENT_DOWNLOAD_DIR_RADARR="/sdi/0103/downloads/radarr_downloads/"
MMS_API_PROCESS_STAGING_URL=http://localhost:5001/seedbox/process-staging-item
PROCESSED_ITEMS_LOG_FILE_PATH_FOR_SFTP_SCRIPT="X:/Seedbox-importer/scripts_sonarr_radarr/processed_sftp_items.json"

# --- SFTP Scanner Task ---
# Interval in minutes for the SFTP scanner task to run
SCHEDULER_SFTP_SCAN_INTERVAL_MINUTES=30

# (Optional) Enable or disable the SFTP scanner guardrail feature.
# If True (default in config.py), the scanner will check if media already exists
# in Sonarr/Radarr before downloading from SFTP.
# Set to 'False' to disable this check and always download.
# SFTP_SCANNER_GUARDFRAIL_ENABLED=True

# --- Configuration for Staging Renaming (SFTP Scanner) ---
# Variables:
# For Sonarr: {Series Standard Title}, {Year}, {season_num:02}, {Series Title}, {ss}, {ee}, {Episode Title}, {Quality Name}, {ext}
# For Radarr: {Movie Standard Title}, {Year}, {Movie Title}, {Quality Name}, {ext}
# Ensure paths are compatible with your OS. Use forward slashes if unsure, as Pathlib will handle conversion.
SONARR_STAGING_RENAMING_SERIES_FOLDER_FORMAT="{Series Standard Title} ({Year})"
SONARR_STAGING_RENAMING_SEASON_FOLDER_FORMAT="Season {season_num:02}"
SONARR_STAGING_RENAMING_FILE_FORMAT="{Series Title} - S{ss}E{ee} - {Episode Title} [{Quality Name}]" # Extension is added automatically

RADARR_STAGING_RENAMING_MOVIE_FOLDER_FORMAT="{Movie Standard Title} ({Year})"
RADARR_STAGING_RENAMING_FILE_FORMAT="{Movie Title} ({Year}) [{Quality Name}]" # Extension is added automatically

# --- Configuration Interface de Configuration ---
APP_PASSWORD=votre_mot_de_passe_securise_ici